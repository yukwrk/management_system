
<div class="container" style="margin-top : 60px">
  <div class="panel panel-default">
    <div class="panel-heading">現場登録</div>
    <div class="panel-body">
    <%= render 'form', construction: @construction %>
    </div>
  </div>
</div>




<script type="text/javascript">


// 原価計の計算
    $('.add_button').click(function() {

        var a = $("#material_cost").val();
        var b = $("#subcontract_cost").val();
        var c = $("#site_overhead_expenses").val();
        var ai = parseInt(a) || 0;
        var bi = parseInt(b) || 0;
        var ci = parseInt(c) || 0;

        var result = ai + bi + ci
        $('#total_cost').val(result)

    });

// 差額の計算
    $('.minus_button').click(function() {

        var d = $("#charge").val();
        var e = $("#total_cost").val();
        var di = parseInt(d) || 0;
        var ei = parseInt(e) || 0;

        var payTheDifference = di - ei
        $('#pay_the_difference').val(payTheDifference)

    });

 


//     /**
//  * 数値の3桁カンマ区切り
//  * 入力値をカンマ区切りにして返却
//  * [引数]   numVal: 入力数値
//  * [返却値] String(): カンマ区切りされた文字列
//  */
// function addFigure(numVal) {
//   // 空の場合そのまま返却
//   if (numVal == ''){
//     return '';
//   }
//   // 全角から半角へ変換し、既にカンマが入力されていたら事前に削除
//   numVal = toHalfWidth(numVal).replace(/,/g, "").trim();
//   // 数値でなければそのまま返却
//   if ( !/^[+|-]?(\d*)(\.\d+)?$/.test(numVal) ){
//       return numVal;
// 　　}
//   // 整数部分と小数部分に分割
//   var numData = numVal.toString().split('.');
//   // 整数部分を3桁カンマ区切りへ
//   numData[0] = Number(numData[0]).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
//   // 小数部分と結合して返却
//   return numData.join('.');
// }
 
// /**
//  * カンマ外し
//  * 入力値のカンマを取り除いて返却
//  * [引数]   strVal: 半角でカンマ区切りされた数値
//  * [返却値] String(): カンマを削除した数値
//  */
// function delFigure(strVal){
//   return strVal.replace( /,/g , "" );
// }
 
// /**
//  * 全角から半角への変革関数
//  * 入力値の英数記号を半角変換して返却
//  * [引数]   strVal: 入力値
//  * [返却値] String(): 半角変換された文字列
//  */
// function toHalfWidth(strVal){
//   // 半角変換
//   var halfVal = strVal.replace(/[！-～]/g,
//     function( tmpStr ) {
//       // 文字コードをシフト
//       return String.fromCharCode( tmpStr.charCodeAt(0) - 0xFEE0 );
//     }
//   );
//   return halfVal;
// }
 
// /** 
//  * 処理を適用するテキストボックスへのイベント設定
//  * onBlur : カンマ区切り処理実施
//  * onFocus : カンマ削除処理実施
//  */
// var material_cost = document.getElementById('material_cost');
// material_cost.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// material_cost.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

// var subcontract_cost = document.getElementById('subcontract_cost');
// subcontract_cost.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// subcontract_cost.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

// var site_overhead_expenses = document.getElementById('site_overhead_expenses');
// site_overhead_expenses.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// site_overhead_expenses.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

// var total_cost = document.getElementById('total_cost');
// total_cost.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// total_cost.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

// var charge = document.getElementById('charge');
// charge.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// charge.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

// var pay_the_difference = document.getElementById('pay_the_difference');
// pay_the_difference.addEventListener('blur', function(){ this.value = addFigure(this.value) }, false);
// pay_the_difference.addEventListener('focus', function(){ this.value = delFigure(this.value) }, false);

</script>
